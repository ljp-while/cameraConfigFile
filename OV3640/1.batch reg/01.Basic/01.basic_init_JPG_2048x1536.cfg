;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
; 
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 1	
TYPE      = OV3640							
SIZE      = 2048, 1536
BIT_WIDTH = 8 
FORMAT    = 3	
I2C_MODE  = 2					
I2C_ADDR  = 0x78	
;TRANS_LVL = 64

;**************************************************************************************/
; ----- board parameter -----
;[board parameter]					Board parameter set for USB2.0 & USB3.0 mode	
;[board parameter][dev2]			Board parameter set for USB2.0 mode
;[board parameter][dev3][inf2]		Board parameter set for USB3.0 mode and USB2.0 interface
;[board parameter][dev3][inf3]		Board parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>    Value representing certain command 
; <value>      value representing certain meanings
; <index>      Index representing certain meanings   
; <dataNumber> Number of <dataN>
; <dataN>      Data representing certain meanings
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x04
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0xC0
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x00

[board parameter][dev2]
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

[board parameter][dev3][inf2]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

;**************************************************************************************/
; ----- register parameter -----
;[register parameter]					Register parameter set for USB2.0 & USB3.0 mode	
;[register parameter][dev2]				Register parameter set for USB2.0 mode
;[register parameter][dev3][inf2]		Register parameter set for USB3.0 mode and USB2.0 interface
;[register parameter][dev3][inf3]		Register parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]

REG = 0x3012, 0x80
REG = 0x304D, 0x45
REG = 0x30A7, 0x5E
REG = 0x3087, 0x16
REG = 0x309C, 0x1A
REG = 0x30A2, 0xE4
REG = 0x30AA, 0x42
REG = 0x30B0, 0xFF
REG = 0x30B1, 0xFF
REG = 0x30B2, 0x10
REG = 0x300E, 0x32
REG = 0x300F, 0x21
REG = 0x3010, 0x20
REG = 0x3011, 0x00
REG = 0x304C, 0x81
REG = 0x30D7, 0x10
REG = 0x30D9, 0x0D
REG = 0x30DB, 0x08
REG = 0x3016, 0x82
REG = 0x3018, 0x38
REG = 0x3019, 0x30
REG = 0x301A, 0x61
REG = 0x307D, 0x00
REG = 0x3087, 0x02
REG = 0x3082, 0x20
REG = 0x3015, 0x12
REG = 0x3014, 0x04
REG = 0x3013, 0xF7
REG = 0x303C, 0x08
REG = 0x303D, 0x18
REG = 0x303E, 0x06
REG = 0x303F, 0x0C
REG = 0x3030, 0x62
REG = 0x3031, 0x26
REG = 0x3032, 0xE6
REG = 0x3033, 0x6E
REG = 0x3034, 0xEA
REG = 0x3035, 0xAE
REG = 0x3036, 0xA6
REG = 0x3037, 0x6A
REG = 0x3104, 0x02
REG = 0x3105, 0xFD
REG = 0x3106, 0x00
REG = 0x3107, 0xFF
REG = 0x3300, 0x12
REG = 0x3301, 0xDE
REG = 0x3302, 0xCF
REG = 0x3312, 0x26
REG = 0x3314, 0x42
REG = 0x3313, 0x2B
REG = 0x3315, 0x42
REG = 0x3310, 0xD0
REG = 0x3311, 0xBD
REG = 0x330C, 0x18
REG = 0x330D, 0x18
REG = 0x330E, 0x56
REG = 0x330F, 0x5C
REG = 0x330B, 0x1C
REG = 0x3306, 0x5C
REG = 0x3307, 0x11
REG = 0x336A, 0x52
REG = 0x3370, 0x46
REG = 0x3376, 0x38
REG = 0x30B8, 0x20
REG = 0x30B9, 0x17
REG = 0x30BA, 0x04
REG = 0x30BB, 0x08
REG = 0x3507, 0x06
REG = 0x350A, 0x4F
REG = 0x3100, 0x02
REG = 0x3301, 0xDE
REG = 0x3304, 0x00
REG = 0x3400, 0x00
REG = 0x3404, 0x00
REG = 0x3600, 0xC4
REG = 0x3088, 0x08
REG = 0x3089, 0x00
REG = 0x308A, 0x06
REG = 0x308B, 0x00
REG = 0x308D, 0x04
REG = 0x3308, 0x00
REG = 0x3086, 0x00
REG = 0x3302, 0xEF  // add
REG = 0x3011, 0x02

//jpg, basic
REG = 0x300E, 0x36   //clock control
REG = 0x300F, 0xA1   
REG = 0x3011, 0x01  //ljp, 2022.01.17   
REG = 0x304C, 0x84   

REG = 0x3100, 0x32   //JPG
REG = 0x3304, 0x00  
REG = 0x3400, 0x02   //format input source select
REG = 0x3404, 0x22  
REG = 0x3500, 0x00   
REG = 0x3610, 0x80   

REG = 0x307C, 0x10 
		
REG = 0x3362, 0x01	//set 320x240 
REG = 0x3363, 0x48
REG = 0x3364, 0xF4
REG = 0x3088, 0x01
REG = 0x3089, 0x40
REG = 0x308A, 0x00
REG = 0x308B, 0xF0 

//jpg, 2048x1536
REG = 0x3362, 0x68
REG = 0x3363, 0x08
REG = 0x3364, 0x04

REG = 0x3088, 0x08
REG = 0x3089, 0x00
REG = 0x308A, 0x06
REG = 0x308B, 0x00 
