;**************************************************************************************/
; ----- camera parameter -----
; [camera parameter]	Camera parameter set for USB2.0 & USB3.0 mode
;
; -- Keyname description:
; CFG_MODE  = set the config mode for camera: 0 -> User define(UI)
;											  1 -> This config File
; TYPE      = set the name of the camera module
; SIZE		= set the width and height of the image generated by camera 
; BIT_WIDTH = set the bit width of the image generated by camera 
; FORMAT    = set the format of the image generated by camera:
;				| 0 -> RAW	  | 1 -> RGB565  | 2 -> YUV422   | 3 -> JPG  | 4 -> MONO  | 5 -> ST_RAW	| 6 -> ST_MONO |  
;				| -- 0 -> RG  | -- 0 -> RGB  | -- 0 -> YUYV  |           | 			  | -- 0 -> RG  | 			   |  
;				| -- 1 -> GR  | -- 1 -> BGR  | -- 1 -> YVYU  |           | 			  | -- 1 -> GR  | 			   |  
;				| -- 2 -> GB  |              | -- 2 -> UYVY  |           |			  | -- 2 -> GB  |			   |  
;				| -- 3 -> BG  |              | -- 3 -> VYUY  |           | 			  | -- 3 -> BG  | 			   |  
; I2C_MODE  = set the bit width of the address and data of I2C communication: 
;				0 ->  8 bit address &  8 bit value				
;				1 ->  8 bit address & 16 bit value
;				2 -> 16 bit address &  8 bit value
;				3 -> 16 bit address & 16 bit value		
; I2C_ADDR  = set the I2C address for register config of camera 
; G_GAIN    = set the address for green1_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; B_GAIN    = set the address for blue_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; R_GAIN    = set the address for red_gain register config of camera	( RAW & RGB565 & ST_RAW mode )
; G2_GAIN   = set the address for green2_gain register config of camera	( RAW & ST_RAW mode )
; Y_GAIN    = set the address for Y_gain register config of camera		( YUV422 mode )
; U_GAIN    = set the address for U_gain register config of camera		( YUV422 mode )
; V_GAIN    = set the address for V_gain register config of camera		( YUV422 mode )
; GL_GAIN   = set the address for global_gain register config of camera
; 
; -- Keyname format:
; CFG_MODE  = <value1>							;<comment>
; TYPE      = <value1>
; SIZE		= <width>, <height>
; BIT_WIDTH = <bitWidth>
; FORMAT    = <value1>[, <value2>]
; I2C_MODE  = <value1>
; I2C_ADDR  = <i2cAddress> 
; G_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; B_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; R_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; G2_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; Y_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; U_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; V_GAIN    = [<page>,] <address>, <minValue>, <maxValue>
; GL_GAIN   = [<page>,] <address>, <minValue>, <maxValue>
; 
; <valueN>		Index value representing certain meanings 
; <width>		Width of the image generated by camera
; <height>		Height of the image generated by camera
; <bitWidth>	Bit width of the image generated by camera
; <i2cAddress>	I2C address for register config of camera
; <page>        Optional address space for this register. Some sensors (mostly SOC's)
;               have multiple register pages (see the sensor spec or developers guide)
; <address>     The register address 
; <minValue>	Minimale value of certain address
; <maxValue>	Maximale value of certain address
; <comment>    	Some form of C-style comments are supported in this .cfg file
; 
;**************************************************************************************/
[camera parameter]
CFG_MODE  = 1	
TYPE      = OV5640
SIZE      = 2592, 1944
BIT_WIDTH = 8 
FORMAT    = 3	
I2C_MODE  = 2					
I2C_ADDR  = 0x78
;TRANS_LVL = 64	
				

;**************************************************************************************/
; ----- board parameter -----
;[board parameter]					Board parameter set for USB2.0 & USB3.0 mode	
;[board parameter][dev2]			Board parameter set for USB2.0 mode
;[board parameter][dev3][inf2]		Board parameter set for USB3.0 mode and USB2.0 interface
;[board parameter][dev3][inf3]		Board parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; VRCMD = set board parameter by vendor command 
; 
; -- Keyname format:
; VRCMD = <command>, <value>, <index>, <dataNumber>[, <data1>[, <data2>[, <data3>[, <data4>]]]] 		//<comment>
;
; <command>    Value representing certain command 
; <value>      value representing certain meanings
; <index>      Index representing certain meanings   
; <dataNumber> Number of <dataN>
; <dataN>      Data representing certain meanings
; <comment>    Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[board parameter]
VRCMD = 0xD7, 0x4600, 0x0100, 1, 0x05
VRCMD = 0xD7, 0x4600, 0x0200, 1, 0x01
VRCMD = 0xD7, 0x4600, 0x0300, 1, 0x40
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0A00, 1, 0x00
VRCMD = 0xD7, 0x4600, 0x0C00, 1, 0x00

[board parameter][dev2]
VRCMD = 0xF6, 0x0000, 0x0000, 3, 0x03, 0x04, 0x0C

[board parameter][dev3][inf2]
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

[board parameter][dev3][inf3]
VRCMD = 0xD7, 0x4600, 0x0400, 1, 0x00
VRCMD = 0xF3, 0x0000, 0x0000, 0
VRCMD = 0xF9, 0x0004, 0x0000, 0

;**************************************************************************************/
; ----- register parameter -----
;[register parameter]					Register parameter set for USB2.0 & USB3.0 mode	
;[register parameter][dev2]				Register parameter set for USB2.0 mode
;[register parameter][dev3][inf2]		Register parameter set for USB3.0 mode and USB2.0 interface
;[register parameter][dev3][inf3]		Register parameter set for USB3.0 mode and USB3.0 interface
;
; -- Keyname description:
; REG    = assign a new register value
; DELAY  = delay a certain amount of milliseconds before continuing
;
; -- Keyname format:
; REG    = [<page>,] <address>, <value>             //<comment>
; DELAY  = <milliseconds>
;
; <page>         Optional address space for this register. Some sensors (mostly SOC's)
;                have multiple register pages (see the sensor spec or developers guide)
; <address>      the register address
; <value>        the new value to assign to the register
; <milliseconds> wait for this ammount of milliseconds before continuing 
; <comment>      Some form of C-style comments are supported in this .cfg file
;
;**************************************************************************************/
[register parameter]
REG = 0x3103, 0x11		// system clock from pad, bit[1]
REG = 0x3008, 0x82		// software reset, bit[7]
DELAY=100
REG = 0x3008, 0x42		// software power down, bit[6]
REG = 0x3103, 0x03		// system clock from PLL, bit[1]
REG = 0x3017, 0xFF		// FREX, Vsync, HREF, PCLK, D[9:6] output enable
REG = 0x3018, 0xFF
REG = 0x3034, 0x1A
REG = 0x3037, 0x13		// PLL root divider, bit[4], PLL pre-divider, bit[3:0]
REG = 0x3108, 0x01		// PCLK root divider, bit[5:4], SCLK2x root divider, bit[3:2]
REG = 0x3630, 0x36
REG = 0x3631, 0x0E
REG = 0x3632, 0xE2
REG = 0x3633, 0x12
REG = 0x3621, 0xE0
REG = 0x3704, 0xA0
REG = 0x3703, 0x5A
REG = 0x3715, 0x78
REG = 0x3717, 0x01
REG = 0x370B, 0x60
REG = 0x3705, 0x1A
REG = 0x3905, 0x02
REG = 0x3906, 0x10
REG = 0x3901, 0x0A
REG = 0x3731, 0x12
REG = 0x3600, 0x08
REG = 0x3601, 0x33
REG = 0x302D, 0x60
REG = 0x3620, 0x52
REG = 0x371B, 0x20
REG = 0x471C, 0x50
REG = 0x3A13, 0x43
REG = 0x3A18, 0x00
REG = 0x3A19, 0xF8
REG = 0x3635, 0x13
REG = 0x3636, 0x03
REG = 0x3634, 0x40
REG = 0x3622, 0x01
REG = 0x3C01, 0x34
REG = 0x3C04, 0x28
REG = 0x3C05, 0x98
REG = 0x3C06, 0x00
REG = 0x3C07, 0x08
REG = 0x3C08, 0x00
REG = 0x3C09, 0x1C
REG = 0x3C0A, 0x9C
REG = 0x3C0B, 0x40
REG = 0x3810, 0x00
REG = 0x3811, 0x10
REG = 0x3812, 0x00
REG = 0x3708, 0x64
REG = 0x4001, 0x02
REG = 0x4005, 0x1A
REG = 0x3000, 0x00
REG = 0x3004, 0xFF
REG = 0x300E, 0x58
REG = 0x302E, 0x00
REG = 0x4300, 0x30
REG = 0x501F, 0x00
REG = 0x440E, 0x00
REG = 0x5000, 0xA7


//auto exposure control
REG = 0x3A0F, 0x30
REG = 0x3A10, 0x28
REG = 0x3A1B, 0x30
REG = 0x3A1E, 0x26
REG = 0x3A11, 0x60
REG = 0x3A1F, 0x14

//The lens compensation
REG = 0x5800, 0x23
REG = 0x5801, 0x14
REG = 0x5802, 0x0F
REG = 0x5803, 0x0F
REG = 0x5804, 0x12
REG = 0x5805, 0x26
REG = 0x5806, 0x0C
REG = 0x5807, 0x08
REG = 0x5808, 0x05
REG = 0x5809, 0x05
REG = 0x580A, 0x08
REG = 0x580B, 0x0D
REG = 0x580C, 0x08
REG = 0x580D, 0x03
REG = 0x580E, 0x00
REG = 0x580F, 0x00
REG = 0x5810, 0x03
REG = 0x5811, 0x09
REG = 0x5812, 0x07
REG = 0x5813, 0x03
REG = 0x5814, 0x00
REG = 0x5815, 0x01
REG = 0x5816, 0x03
REG = 0x5817, 0x08
REG = 0x5818, 0x0D
REG = 0x5819, 0x08
REG = 0x581A, 0x05
REG = 0x581B, 0x06
REG = 0x581C, 0x08
REG = 0x581D, 0x0E
REG = 0x581E, 0x29
REG = 0x581F, 0x17
REG = 0x5820, 0x11
REG = 0x5821, 0x11
REG = 0x5822, 0x15
REG = 0x5823, 0x28
REG = 0x5824, 0x46
REG = 0x5825, 0x26
REG = 0x5826, 0x08
REG = 0x5827, 0x26
REG = 0x5828, 0x64
REG = 0x5829, 0x26
REG = 0x582A, 0x24
REG = 0x582B, 0x22
REG = 0x582C, 0x24
REG = 0x582D, 0x24
REG = 0x582E, 0x06
REG = 0x582F, 0x22
REG = 0x5830, 0x40
REG = 0x5831, 0x42
REG = 0x5832, 0x24
REG = 0x5833, 0x26
REG = 0x5834, 0x24
REG = 0x5835, 0x22
REG = 0x5836, 0x22
REG = 0x5837, 0x26
REG = 0x5838, 0x44
REG = 0x5839, 0x24
REG = 0x583A, 0x26
REG = 0x583B, 0x28
REG = 0x583C, 0x42
REG = 0x583D, 0xCE


//auto white balance 
REG = 0x5180, 0xFF
REG = 0x5181, 0xF2
REG = 0x5182, 0x00
REG = 0x5183, 0x14
REG = 0x5184, 0x25
REG = 0x5185, 0x24
REG = 0x5186, 0x09
REG = 0x5187, 0x09
REG = 0x5188, 0x09
REG = 0x5189, 0x75
REG = 0x518A, 0x54
REG = 0x518B, 0xE0
REG = 0x518C, 0xB2
REG = 0x518D, 0x42
REG = 0x518E, 0x3D
REG = 0x518F, 0x56
REG = 0x5190, 0x46
REG = 0x5191, 0xF8
REG = 0x5192, 0x04
REG = 0x5193, 0x70
REG = 0x5194, 0xF0
REG = 0x5195, 0xF0
REG = 0x5196, 0x03
REG = 0x5197, 0x01
REG = 0x5198, 0x04
REG = 0x5199, 0x12
REG = 0x519A, 0x04
REG = 0x519B, 0x00
REG = 0x519C, 0x06
REG = 0x519D, 0x82
REG = 0x519E, 0x38

//Gamma curve
REG = 0x5480, 0x01
REG = 0x5481, 0x08
REG = 0x5482, 0x14
REG = 0x5483, 0x28
REG = 0x5484, 0x51
REG = 0x5485, 0x65
REG = 0x5486, 0x71
REG = 0x5487, 0x7D
REG = 0x5488, 0x87
REG = 0x5489, 0x91
REG = 0x548A, 0x9A
REG = 0x548B, 0xAA
REG = 0x548C, 0xB8
REG = 0x548D, 0xCD
REG = 0x548E, 0xDD
REG = 0x548F, 0xEA
REG = 0x5490, 0x1D


// color matrix
REG = 0x5381, 0x1E
REG = 0x5382, 0x5B
REG = 0x5383, 0x08
REG = 0x5384, 0x0A
REG = 0x5385, 0x7E
REG = 0x5386, 0x88
REG = 0x5387, 0x7C
REG = 0x5388, 0x6C
REG = 0x5389, 0x10
REG = 0x538A, 0x01
REG = 0x538B, 0x98

// UV adjust
REG = 0x5580, 0x06
REG = 0x5583, 0x40
REG = 0x5584, 0x10
REG = 0x5589, 0x10
REG = 0x558A, 0x00
REG = 0x558B, 0xF8
REG = 0x501D, 0x40


// CIP
REG = 0x5300, 0x08
REG = 0x5301, 0x30
REG = 0x5302, 0x10
REG = 0x5303, 0x00
REG = 0x5304, 0x08
REG = 0x5305, 0x30
REG = 0x5306, 0x08
REG = 0x5307, 0x16
REG = 0x5309, 0x08
REG = 0x530A, 0x30
REG = 0x530B, 0x04
REG = 0x530C, 0x06
REG = 0x5025, 0x00
REG = 0x3008, 0x02


//-----------------------------//
//JPG Basic, 320x240

REG = 0x3035, 0x21
REG = 0x3036, 0x69 // PLL 

REG = 0x3800, 0x00
REG = 0x3801, 0x00
REG = 0x3802, 0x00
REG = 0x3803, 0x00
REG = 0x3804, 0x0A 
REG = 0x3805, 0x3F
REG = 0x3806, 0x07 
REG = 0x3807, 0x9F
REG = 0x380C, 0x0C 
REG = 0x380D, 0x80
REG = 0x380E, 0x07 
REG = 0x380F, 0xD0
REG = 0x5001, 0xA3
REG = 0x5680, 0x00 
REG = 0x5681, 0x00 
REG = 0x5682, 0x0A 
REG = 0x5683, 0x20
REG = 0x5684, 0x00 
REG = 0x5685, 0x00 
REG = 0x5686, 0x07 
REG = 0x5687, 0x98


REG = 0x3820, 0x40
REG = 0x3821, 0x26
REG = 0x4300, 0x30
REG = 0x501F, 0x00
REG = 0x3002, 0x00
REG = 0x3006, 0xFF


REG = 0x460B, 0x35
REG = 0x460C, 0x22
REG = 0x4837, 0x16 // MIPI global timing 
REG = 0x3824, 0x04 // PCLK manual divider



REG = 0x3808, 0x01 
REG = 0x3809, 0x40
REG = 0x380A, 0x00 
REG = 0x380B, 0xF0
REG = 0x4407, 0x04


//JPG Basic, capture, 2592x1944

REG = 0x3808, 0x0A
REG = 0x3809, 0x20
REG = 0x380A, 0x07 
REG = 0x380B, 0x98
